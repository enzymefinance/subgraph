specVersion: 0.0.2
description: Melon protocol
repository: https://github.com/melonproject/subgraph
schema:
  file: ./schema.graphql

dataSources:
  - name: DispatcherDataSource
    kind: ethereum/contract
    network: mainnet
    source:
      address: '{{dispatcher}}'
      abi: DispatcherContract
      startBlock: 0
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.4
      language: wasm/assemblyscript
      file: ./src/mappings/Dispatcher.ts
      entities: []
      abis:
        - name: DispatcherContract
          file: ./node_modules/@melonproject/persistent/artifacts/Dispatcher.json
        - name: FundDeployerContract
          file: ./node_modules/@melonproject/release/artifacts/FundDeployer.json
        - name: ComptrollerLibContract
          file: ./node_modules/@melonproject/release/artifacts/ComptrollerLib.json
      eventHandlers:
        - event: CurrentFundDeployerSet(address,address)
          handler: handleCurrentFundDeployerSet
        - event: MigrationCancelled(indexed address,indexed address,indexed address,address,address,uint256)
          handler: handleMigrationCancelled
        - event: MigrationExecuted(indexed address,indexed address,indexed address,address,address,uint256)
          handler: handleMigrationExecuted
        - event: MigrationSignaled(indexed address,indexed address,indexed address,address,address)
          handler: handleMigrationSignaled
        - event: PostCancelMigrationOriginHookFailed(bytes,indexed address,indexed address,indexed address,address,address,uint256)
          handler: handlePostCancelMigrationOriginHookFailed
        - event: PostCancelMigrationTargetHookFailed(bytes,indexed address,indexed address,indexed address,address,address,uint256)
          handler: handlePostCancelMigrationTargetHookFailed
        - event: PostMigrateOriginHookFailed(bytes,indexed address,indexed address,indexed address,address,address,uint256)
          handler: handlePostMigrateOriginHookFailed
        - event: PostSignalMigrationOriginHookFailed(bytes,indexed address,indexed address,indexed address,address,address)
          handler: handlePostSignalMigrationOriginHookFailed
        - event: PreMigrateOriginHookFailed(bytes,indexed address,indexed address,indexed address,address,address,uint256)
          handler: handlePreMigrateOriginHookFailed
        - event: PreSignalMigrationOriginHookFailed(bytes,indexed address,indexed address,indexed address,address,address)
          handler: handlePreSignalMigrationOriginHookFailed
        - event: VaultProxyDeployed(indexed address,indexed address,address,address,address,string)
          handler: handleVaultProxyDeployed

  - name: EngineSource
    kind: ethereum/contract
    network: mainnet
    source:
      address: '{{engine}}'
      abi: EngineContract
      startBlock: 0
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.4
      language: wasm/assemblyscript
      file: ./src/mappings/Engine.ts
      entities: []
      abis:
        - name: EngineContract
          file: ./node_modules/@melonproject/release/artifacts/Engine.json
        - name: VaultLibContract
          file: ./node_modules/@melonproject/release/artifacts/VaultLib.json
        - name: StandardERC20Contract
          file: ./node_modules/@melonproject/release/artifacts/StandardERC20.json
      eventHandlers:
        - event: AmguPaidInEther(uint256)
          handler: handleAmguPaidInEther
        - event: AmguPriceSet(uint256,uint256)
          handler: handleAmguPriceSet
        - event: EtherTakerAdded(address)
          handler: handleEtherTakerAdded
        - event: EtherTakerRemoved(address)
          handler: handleEtherTakerRemoved
        - event: FrozenEtherThawed(uint256)
          handler: handleFrozenEtherThawed
        - event: MlnTokensBurned(uint256)
          handler: handleMlnTokensBurned

  - name: FundDeployerDataSource
    kind: ethereum/contract
    network: mainnet
    source:
      address: '{{fundDeployer}}'
      abi: FundDeployerContract
      startBlock: 0
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.4
      language: wasm/assemblyscript
      file: ./src/mappings/FundDeployer.ts
      entities: []
      abis:
        - name: FundDeployerContract
          file: ./node_modules/@melonproject/release/artifacts/FundDeployer.json
        - name: VaultLibContract
          file: ./node_modules/@melonproject/release/artifacts/VaultLib.json
        - name: ComptrollerLibContract
          file: ./node_modules/@melonproject/release/artifacts/ComptrollerLib.json
        - name: StandardERC20Contract
          file: ./node_modules/@melonproject/release/artifacts/StandardERC20.json
      eventHandlers:
        - event: AmguPaid(indexed address,uint256,uint256)
          handler: handleAmguPaid
        - event: ComptrollerLibSet(address)
          handler: handleComptrollerLibSet
        - event: ComptrollerProxyDeployed(indexed address,address,indexed address,bytes,bytes,indexed bool)
          handler: handleComptrollerProxyDeployed
        - event: NewFundCreated(indexed address,address,address,indexed address,string,indexed address,bytes,bytes)
          handler: handleNewFundCreated
        - event: ReleaseStatusSet(indexed uint8,indexed uint8)
          handler: handleReleaseStatusSet
        - event: VaultCallDeregistered(indexed address,bytes4)
          handler: handleVaultCallDeregistered
        - event: VaultCallRegistered(indexed address,bytes4)
          handler: handleVaultCallRegistered

  - name: FeeManagerDataSource
    kind: ethereum/contract
    network: mainnet
    source:
      address: '{{feeManager}}'
      abi: FeeManagerContract
      startBlock: 0
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.4
      language: wasm/assemblyscript
      file: ./src/mappings/FeeManager.ts
      entities: []
      abis:
        - name: FeeManagerContract
          file: ./node_modules/@melonproject/release/artifacts/FeeManager.json
        - name: VaultLibContract
          file: ./node_modules/@melonproject/release/artifacts/VaultLib.json
        - name: ComptrollerLibContract
          file: ./node_modules/@melonproject/release/artifacts/ComptrollerLib.json
        - name: StandardERC20Contract
          file: ./node_modules/@melonproject/release/artifacts/StandardERC20.json
        - name: IFeeInterface
          file: ./node_modules/@melonproject/release/artifacts/IFee.json
      eventHandlers:
        - event: AllSharesOutstandingForcePaid(indexed address,address,uint256)
          handler: handleAllSharesOutstandingForcePaid
        - event: FeeDeregistered(indexed address,indexed string)
          handler: handleFeeDeregistered
        - event: FeeEnabledForFund(indexed address,indexed address,bytes)
          handler: handleFeeEnabledForFund
        - event: FeeRegistered(indexed address,indexed string)
          handler: handleFeeRegistered
        - event: FeeSettledForFund(indexed address,indexed address,uint8,uint256)
          handler: handleFeeSettledForFund
        - event: FeesRecipientSet(indexed address,address,address)
          handler: handleFeesRecipientSet
        - event: SharesOutstandingPaidForFee(indexed address,indexed address,address,uint256)
          handler: handleSharesOutstandingPaidForFee

  - name: ManagementFeeDataSource
    kind: ethereum/contract
    network: mainnet
    source:
      address: '{{managementFee}}'
      abi: ManagementFeeContract
      startBlock: 0
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.4
      language: wasm/assemblyscript
      file: ./src/mappings/ManagementFee.ts
      entities: []
      abis:
        - name: ManagementFeeContract
          file: ./node_modules/@melonproject/release/artifacts/ManagementFee.json
        - name: FeeManagerContract
          file: ./node_modules/@melonproject/release/artifacts/FeeManager.json
        - name: VaultLibContract
          file: ./node_modules/@melonproject/release/artifacts/VaultLib.json
        - name: ComptrollerLibContract
          file: ./node_modules/@melonproject/release/artifacts/ComptrollerLib.json
        - name: StandardERC20Contract
          file: ./node_modules/@melonproject/release/artifacts/StandardERC20.json
        - name: IFeeInterface
          file: ./node_modules/@melonproject/release/artifacts/IFee.json
      eventHandlers:
        - event: FundSettingsAdded(indexed address,uint256)
          handler: handleFundSettingsAdded
        - event: Settled(indexed address,uint256,uint256)
          handler: handleSettled

  - name: PerformanceFeeDataSource
    kind: ethereum/contract
    network: mainnet
    source:
      address: '{{performanceFee}}'
      abi: PerformanceFeeContract
      startBlock: 0
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.4
      language: wasm/assemblyscript
      file: ./src/mappings/PerformanceFee.ts
      entities: []
      abis:
        - name: PerformanceFeeContract
          file: ./node_modules/@melonproject/release/artifacts/PerformanceFee.json
        - name: FeeManagerContract
          file: ./node_modules/@melonproject/release/artifacts/FeeManager.json
        - name: VaultLibContract
          file: ./node_modules/@melonproject/release/artifacts/VaultLib.json
        - name: ComptrollerLibContract
          file: ./node_modules/@melonproject/release/artifacts/ComptrollerLib.json
      eventHandlers:
        - event: ActivatedForFund(indexed address)
          handler: handleActivatedForFund
        - event: FundSettingsAdded(indexed address,uint256,uint256)
          handler: handleFundSettingsAdded
        - event: PaidOut(indexed address)
          handler: handlePaidOut
        - event: PerformanceUpdated(indexed address,uint256,uint256,int256)
          handler: handlePerformanceUpdated

  - name: PolicyManagerDataSource
    kind: ethereum/contract
    network: mainnet
    source:
      address: '{{policyManager}}'
      abi: PolicyManagerContract
      startBlock: 0
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.4
      language: wasm/assemblyscript
      file: ./src/mappings/PolicyManager.ts
      entities: []
      abis:
        - name: PolicyManagerContract
          file: ./node_modules/@melonproject/release/artifacts/PolicyManager.json
        - name: VaultLibContract
          file: ./node_modules/@melonproject/release/artifacts/VaultLib.json
        - name: ComptrollerLibContract
          file: ./node_modules/@melonproject/release/artifacts/ComptrollerLib.json
        - name: StandardERC20Contract
          file: ./node_modules/@melonproject/release/artifacts/StandardERC20.json
        - name: IPolicyInterface
          file: ./node_modules/@melonproject/release/artifacts/IPolicy.json
      eventHandlers:
        - event: PolicyDeregistered(indexed address,indexed string)
          handler: handlePolicyDeregistered
        - event: PolicyEnabledForFund(indexed address,indexed address,bytes)
          handler: handlePolicyEnabledForFund
        - event: PolicyRegistered(indexed address,indexed string)
          handler: handlePolicyRegistered

  - name: AdapterBlacklistDataSource
    kind: ethereum/contract
    network: mainnet
    source:
      address: '{{adapterBlacklist}}'
      abi: AdapterBlacklistContract
      startBlock: 0
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.4
      language: wasm/assemblyscript
      file: ./src/mappings/AdapterBlacklist.ts
      entities: []
      abis:
        - name: AdapterBlacklistContract
          file: ./node_modules/@melonproject/release/artifacts/AdapterBlacklist.json
        - name: VaultLibContract
          file: ./node_modules/@melonproject/release/artifacts/VaultLib.json
        - name: ComptrollerLibContract
          file: ./node_modules/@melonproject/release/artifacts/ComptrollerLib.json
      eventHandlers:
        - event: AddressesAdded(indexed address,address[])
          handler: handleAddressesAdded
        - event: AddressesRemoved(indexed address,address[])
          handler: handleAddressesRemoved

  - name: AdapterWhitelistDataSource
    kind: ethereum/contract
    network: mainnet
    source:
      address: '{{adapterWhitelist}}'
      abi: AdapterWhitelistContract
      startBlock: 0
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.4
      language: wasm/assemblyscript
      file: ./src/mappings/AdapterWhitelist.ts
      entities: []
      abis:
        - name: AdapterWhitelistContract
          file: ./node_modules/@melonproject/release/artifacts/AdapterWhitelist.json
        - name: FeeManagerContract
          file: ./node_modules/@melonproject/release/artifacts/FeeManager.json
        - name: VaultLibContract
          file: ./node_modules/@melonproject/release/artifacts/VaultLib.json
        - name: ComptrollerLibContract
          file: ./node_modules/@melonproject/release/artifacts/ComptrollerLib.json
      eventHandlers:
        - event: AddressesAdded(indexed address,address[])
          handler: handleAddressesAdded
        - event: AddressesRemoved(indexed address,address[])
          handler: handleAddressesRemoved

  - name: AssetWhitelistDataSource
    kind: ethereum/contract
    network: mainnet
    source:
      address: '{{assetWhitelist}}'
      abi: AssetWhitelistContract
      startBlock: 0
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.4
      language: wasm/assemblyscript
      file: ./src/mappings/AssetWhitelist.ts
      entities: []
      abis:
        - name: AssetWhitelistContract
          file: ./node_modules/@melonproject/release/artifacts/AssetWhitelist.json
        - name: VaultLibContract
          file: ./node_modules/@melonproject/release/artifacts/VaultLib.json
        - name: ComptrollerLibContract
          file: ./node_modules/@melonproject/release/artifacts/ComptrollerLib.json
      eventHandlers:
        - event: AddressesAdded(indexed address,address[])
          handler: handleAddressesAdded
        - event: AddressesRemoved(indexed address,address[])
          handler: handleAddressesRemoved

  - name: AssetBlacklistDataSource
    kind: ethereum/contract
    network: mainnet
    source:
      address: '{{assetBlacklist}}'
      abi: AssetBlacklistContract
      startBlock: 0
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.4
      language: wasm/assemblyscript
      file: ./src/mappings/AssetBlacklist.ts
      entities: []
      abis:
        - name: AssetBlacklistContract
          file: ./node_modules/@melonproject/release/artifacts/AssetBlacklist.json
        - name: VaultLibContract
          file: ./node_modules/@melonproject/release/artifacts/VaultLib.json
        - name: ComptrollerLibContract
          file: ./node_modules/@melonproject/release/artifacts/ComptrollerLib.json
      eventHandlers:
        - event: AddressesAdded(indexed address,address[])
          handler: handleAddressesAdded
        - event: AddressesRemoved(indexed address,address[])
          handler: handleAddressesRemoved

  - name: InvestorWhitelistDataSource
    kind: ethereum/contract
    network: mainnet
    source:
      address: '{{investorWhitelist}}'
      abi: InvestorWhitelistContract
      startBlock: 0
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.4
      language: wasm/assemblyscript
      file: ./src/mappings/InvestorWhitelist.ts
      entities: []
      abis:
        - name: InvestorWhitelistContract
          file: ./node_modules/@melonproject/release/artifacts/InvestorWhitelist.json
        - name: VaultLibContract
          file: ./node_modules/@melonproject/release/artifacts/VaultLib.json
        - name: ComptrollerLibContract
          file: ./node_modules/@melonproject/release/artifacts/ComptrollerLib.json
      eventHandlers:
        - event: AddressesAdded(indexed address,address[])
          handler: handleAddressesAdded
        - event: AddressesRemoved(indexed address,address[])
          handler: handleAddressesRemoved

  - name: MaxConcentrationDataSource
    kind: ethereum/contract
    network: mainnet
    source:
      address: '{{maxConcentration}}'
      abi: MaxConcentrationContract
      startBlock: 0
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.4
      language: wasm/assemblyscript
      file: ./src/mappings/MaxConcentration.ts
      entities: []
      abis:
        - name: MaxConcentrationContract
          file: ./node_modules/@melonproject/release/artifacts/MaxConcentration.json
        - name: VaultLibContract
          file: ./node_modules/@melonproject/release/artifacts/VaultLib.json
        - name: ComptrollerLibContract
          file: ./node_modules/@melonproject/release/artifacts/ComptrollerLib.json
      eventHandlers:
        - event: MaxConcentrationSet(address,uint256)
          handler: handleMaxConcentrationSet

  - name: IntegrationManagerDataSource
    kind: ethereum/contract
    network: mainnet
    source:
      address: '{{integrationManager}}'
      abi: IntegrationManagerContract
      startBlock: 0
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.4
      language: wasm/assemblyscript
      file: ./src/mappings/IntegrationManager.ts
      entities: []
      abis:
        - name: IntegrationManagerContract
          file: ./node_modules/@melonproject/release/artifacts/IntegrationManager.json
        - name: VaultLibContract
          file: ./node_modules/@melonproject/release/artifacts/VaultLib.json
        - name: ComptrollerLibContract
          file: ./node_modules/@melonproject/release/artifacts/ComptrollerLib.json
        - name: StandardERC20Contract
          file: ./node_modules/@melonproject/release/artifacts/StandardERC20.json
        - name: IIntegrationAdapterInterface
          file: ./node_modules/@melonproject/release/artifacts/IIntegrationAdapter.json
      eventHandlers:
        - event: AdapterDeregistered(indexed address,indexed string)
          handler: handleAdapterDeregistered
        - event: AdapterRegistered(indexed address,indexed string)
          handler: handleAdapterRegistered
        - event: CallOnIntegrationExecuted(indexed address,indexed address,address,indexed address,address[],uint256[],address[],uint256[])
          handler: handleCallOnIntegrationExecuted

  - name: ChainlinkPriceFeedDataSource
    kind: ethereum/contract
    network: mainnet
    source:
      address: '{{chainlinkPriceFeed}}'
      abi: ChainlinkPriceFeedContract
      startBlock: 0
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.4
      language: wasm/assemblyscript
      file: ./src/mappings/ChainlinkPriceFeed.ts
      entities: []
      abis:
        - name: ChainlinkPriceFeedContract
          file: ./node_modules/@melonproject/release/artifacts/ChainlinkPriceFeed.json
        - name: VaultLibContract
          file: ./node_modules/@melonproject/release/artifacts/VaultLib.json
        - name: ComptrollerLibContract
          file: ./node_modules/@melonproject/release/artifacts/ComptrollerLib.json
        - name: StandardERC20Contract
          file: ./node_modules/@melonproject/release/artifacts/StandardERC20.json
        - name: ChainlinkAggregatorContract
          file: ./node_modules/@chainlink/contracts/abi/v0.6/AggregatorInterface.json
        - name: ChainlinkAggregatorProxyContract
          file: ./node_modules/@chainlink/contracts/abi/v0.6/AggregatorProxy.json
      eventHandlers:
        - event: AggregatorSet(indexed address,address,address)
          handler: handleAggregatorSet

  - name: AggregatedDerivativePriceFeedDataSource
    kind: ethereum/contract
    network: mainnet
    source:
      address: '{{aggregatedDerivativePriceFeed}}'
      abi: AggregatedDerivativePriceFeedContract
      startBlock: 0
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.4
      language: wasm/assemblyscript
      file: ./src/mappings/AggregatedDerivativePriceFeed.ts
      entities: []
      abis:
        - name: AggregatedDerivativePriceFeedContract
          file: ./node_modules/@melonproject/release/artifacts/AggregatedDerivativePriceFeed.json
        - name: VaultLibContract
          file: ./node_modules/@melonproject/release/artifacts/VaultLib.json
        - name: ComptrollerLibContract
          file: ./node_modules/@melonproject/release/artifacts/ComptrollerLib.json
        - name: StandardERC20Contract
          file: ./node_modules/@melonproject/release/artifacts/StandardERC20.json
        - name: ValueInterpreterContract
          file: ./node_modules/@melonproject/release/artifacts/ValueInterpreter.json
      eventHandlers:
        - event: PriceFeedSet(indexed address,address,address)
          handler: handlePriceFeedSet

templates:
  - name: VaultLibDataSource
    kind: ethereum/contract
    network: 'mainnet'
    source:
      abi: VaultLibContract
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.4
      language: wasm/assemblyscript
      file: ./src/mappings/VaultLib.ts
      entities: []
      abis:
        - name: ComptrollerLibContract
          file: ./node_modules/@melonproject/release/artifacts/ComptrollerLib.json
        - name: VaultLibContract
          file: ./node_modules/@melonproject/release/artifacts/VaultLib.json
        - name: StandardERC20Contract
          file: ./node_modules/@melonproject/release/artifacts/StandardERC20.json
      eventHandlers:
        - event: AccessorSet(address,address)
          handler: handleAccessorSet
        - event: Approval(indexed address,indexed address,uint256)
          handler: handleApproval
        - event: AssetWithdrawn(indexed address,indexed address,uint256)
          handler: handleAssetWithdrawn
        - event: MigratorSet(address,address)
          handler: handleMigratorSet
        - event: OwnerSet(address,address)
          handler: handleOwnerSet
        - event: TrackedAssetAdded(address)
          handler: handleTrackedAssetAdded
        - event: TrackedAssetRemoved(address)
          handler: handleTrackedAssetRemoved
        - event: Transfer(indexed address,indexed address,uint256)
          handler: handleTransfer
        - event: VaultLibSet(address,address)
          handler: handleVaultLibSet

  - name: ComptrollerLibDataSource
    kind: ethereum/contract
    network: 'mainnet'
    source:
      abi: ComptrollerLibContract
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.4
      language: wasm/assemblyscript
      file: ./src/mappings/ComptrollerLib.ts
      entities: []
      abis:
        - name: ComptrollerLibContract
          file: ./node_modules/@melonproject/release/artifacts/ComptrollerLib.json
        - name: VaultLibContract
          file: ./node_modules/@melonproject/release/artifacts/VaultLib.json
        - name: StandardERC20Contract
          file: ./node_modules/@melonproject/release/artifacts/StandardERC20.json
      eventHandlers:
        - event: AmguPaid(indexed address,uint256,uint256)
          handler: handleAmguPaid
        - event: MigratedSharesDuePaid(address,uint256)
          handler: handleMigratedSharesDuePaid
        - event: SharesBought(indexed address,indexed address,uint256,uint256,uint256)
          handler: handleSharesBought
        - event: SharesRedeemed(indexed address,uint256,address[],uint256[])
          handler: handleSharesRedeemed
        - event: StatusUpdated(indexed uint8)
          handler: handleStatusUpdated
        - event: VaultProxySet(address)
          handler: handleVaultProxySet

  - name: ChainlinkAggregatorDataSource
    kind: ethereum/contract
    network: mainnet
    source:
      abi: ChainlinkAggregatorContract
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.4
      language: wasm/assemblyscript
      entities: []
      file: ./src/mappings/ChainlinkAggregator.ts
      abis:
        - name: ValueInterpreterContract
          file: ./node_modules/@melonproject/release/artifacts/ValueInterpreter.json
        - name: ChainlinkAggregatorContract
          file: ./node_modules/@chainlink/contracts/abi/v0.6/AggregatorInterface.json
      eventHandlers:
        - event: AnswerUpdated(indexed int256,indexed uint256,uint256)
          handler: handleAnswerUpdated
